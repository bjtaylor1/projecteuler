using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace euler579
{
    public class Numerics
    {
        private static readonly ulong[] squares2d = {1, 5, 13, 17, 25, 29, 37, 41, 53, 61, 65, 65, 73, 85, 85, 89, 97, 101, 109, 113, 125, 137, 145, 145, 149, 157, 169, 173, 181, 185, 185, 193, 197, 205, 205, 221, 221, 229, 233, 241, 257, 265, 265, 269, 277, 281, 289, 293, 305, 305, 313, 317, 325, 325, 337, 349, 353, 365, 365, 373, 377, 377, 389, 397, 401, 409, 421, 425, 425, 433, 445, 445, 449, 457, 461, 481, 481, 485, 485, 493, 493, 505, 505, 509, 521, 533, 533, 541, 545, 545, 557, 565, 565, 569, 577, 593, 601, 613, 617, 625, 629, 629, 641, 653, 661, 673, 677, 685, 685, 689, 689, 697, 697, 701, 709, 725, 725, 733, 745, 745, 757, 761, 769, 773, 785, 785, 793, 793, 797, 809, 821, 829, 841, 845, 845, 853, 857, 865, 865, 877, 881, 901, 901, 905, 905, 925, 925, 929, 937, 941, 949, 949, 953, 965, 965, 977, 985, 985, 997, 1009, 1013, 1021, 1025, 1025, 1033, 1037, 1037, 1049, 1061, 1069, 1073, 1073, 1093, 1097, 1105, 1105, 1105, 1105, 1109, 1117, 1129, 1145, 1145, 1153, 1157, 1157, 1165, 1165, 1181, 1189, 1189, 1193, 1201, 1205, 1205, 1213, 1217, 1229, 1237, 1241, 1241, 1249, 1261, 1261, 1277, 1285, 1285, 1289, 1297, 1301, 1313, 1313, 1321, 1325, 1325, 1345, 1345, 1361, 1369, 1373, 1381, 1385, 1385, 1405, 1405, 1409, 1417, 1417, 1429, 1433, 1445, 1445, 1453, 1465, 1465, 1469, 1469, 1481, 1489, 1493, 1513, 1513, 1517, 1517, 1525, 1525, 1537, 1537, 1549, 1553, 1565, 1565, 1585, 1585, 1597, 1601, 1609, 1613, 1621, 1625, 1625, 1637, 1649, 1649, 1657, 1669, 1681, 1685, 1685, 1693, 1697, 1709, 1717, 1717, 1721, 1733, 1741, 1745, 1745, 1753, 1765, 1765, 1769, 1769, 1777, 1781, 1781, 1789, 1801, 1825, 1825, 1853, 1853, 1861, 1865, 1865, 1873, 1877, 1885, 1885, 1885, 1885, 1889, 1901, 1913, 1921, 1921, 1933, 1937, 1937, 1945, 1945, 1949, 1961, 1961, 1973, 1985, 1985, 1993, 1997, 2005, 2005, 2017, 2029, 2041, 2041, 2045, 2045, 2053, 2069, 2081, 2089, 2105, 2105, 2113, 2117, 2117, 2125, 2125, 2129, 2137, 2141, 2153, 2161, 2165, 2165, 2173, 2173, 2197, 2213, 2221, 2225, 2225, 2237, 2245, 2245, 2249, 2249, 2257, 2257, 2269, 2273, 2281, 2285, 2285, 2293, 2297, 2305, 2305, 2309, 2329, 2329, 2333, 2341, 2353, 2353, 2357, 2377, 2381, 2389, 2393, 2405, 2405, 2405, 2405, 2417, 2425, 2425, 2437, 2441, 2465, 2465, 2465, 2465, 2473, 2477, 2501, 2501, 2509, 2509, 2521, 2525, 2525, 2533, 2533, 2545, 2545, 2549, 2557, 2561, 2561, 2581, 2581, 2593, 2605, 2605, 2609, 2617, 2621, 2633, 2657, 2665, 2665, 2665, 2665, 2669, 2669, 2677, 2689, 2693, 2701, 2701, 2705, 2705, 2713, 2725, 2725, 2729, 2741, 2749, 2753, 2777, 2785, 2785, 2789, 2797, 2801, 2809, 2813, 2813, 2825, 2825, 2833, 2837, 2845, 2845, 2857, 2861, 2873, 2873, 2885, 2885, 2897, 2909, 2917, 2929, 2929, 2941, 2941, 2953, 2957, 2965, 2965, 2969, 2977, 2977, 2993, 2993, 3001, 3005, 3005, 3029, 3029, 3037, 3041, 3049, 3061, 3065, 3065, 3077, 3077, 3085, 3085, 3089, 3109, 3121, 3125, 3133, 3133, 3137, 3145, 3145, 3145, 3145, 3161, 3161, 3169, 3181, 3205, 3205, 3209, 3217, 3221, 3229, 3233, 3233, 3253, 3257, 3265, 3265, 3277, 3277, 3281, 3281, 3293, 3293, 3301, 3305, 3305, 3313, 3329, 3341, 3341, 3349, 3349, 3361, 3365, 3365, 3373, 3385, 3385, 3389, 3413, 3425, 3425, 3433, 3445, 3445, 3445, 3445, 3449, 3457, 3461, 3469, 3485, 3485, 3485, 3485, 3497, 3497, 3505, 3505, 3517, 3529, 3533, 3541, 3545, 3545, 3557, 3581, 3589, 3589, 3593, 3601, 3601, 3613, 3617, 3625, 3625, 3637, 3649, 3649, 3653, 3653, 3665, 3665, 3673, 3677, 3697, 3701, 3709, 3721, 3725, 3725, 3733, 3737, 3737, 3757, 3757, 3761, 3769, 3785, 3785, 3793, 3797, 3805, 3805, 3809, 3809, 3821, 3833, 3845, 3845, 3853, 3865, 3865, 3869, 3869, 3877, 3881, 3889, 3893, 3893, 3917, 3925, 3925, 3929, 3961, 3961, 3965, 3965, 3965, 3965, 3973, 3973, 3977, 3977, 3985, 3985, 3989, 4001, 4013, 4021, 4033, 4033, 4045, 4045, 4049, 4057, 4069, 4069, 4073, 4093, 4097, 4097, 4105, 4105, 4121, 4121, 4129, 4133, 4141, 4141, 4145, 4145, 4153, 4157, 4177, 4181, 4181, 4201, 4205, 4205, 4217, 4225, 4225, 4229, 4241, 4253, 4261, 4265, 4265, 4273, 4285, 4285, 4289, 4297, 4321, 4321, 4325, 4325, 4337, 4349, 4357, 4369, 4369, 4373, 4381, 4381, 4385, 4385, 4397, 4405, 4405, 4409, 4421, 4441, 4453, 4453, 4457, 4469, 4469, 4481, 4493, 4505, 4505, 4505, 4505, 4513, 4517, 4525, 4525, 4537, 4537, 4549, 4553, 4553, 4561, 4573, 4573, 4589, 4589, 4597, 4621, 4625, 4625, 4633, 4633, 4637, 4645, 4645, 4649, 4657, 4673, 4685, 4685, 4705, 4705, 4709, 4709, 4717, 4717, 4721, 4729, 4733, 4745, 4745, 4745, 4745, 4765, 4765, 4777, 4777, 4789, 4793, 4801, 4813, 4817, 4825, 4825, 4849, 4849, 4861, 4877, 4885, 4885, 4889, 4901, 4901, 4909, 4913, 4925, 4925, 4933, 4937, 4957, 4969, 4973, 4981, 4981, 4985, 4985, 4993};

        public static ulong[] GetFactors(ulong i)
        {
            var factors = new List<ulong>();
            for (ulong f = 1; f <= i; f++)
                if (Program.IsIntegral((double)i / f)) factors.Add(f);
            return factors.ToArray();
        }

        public static ulong GetHighestSquareFactor(ulong n)
        {
            var factors = GetFactors(n);
            var squareFactors = factors.Where(f => squares2d.Contains(f)).ToArray();
            var highestSquareFactor = squareFactors.Max();
            return highestSquareFactor;
        }

        public static string IntegralFactor(ulong n, ulong d)
        {
            double f = (double) n/d;
            if (Program.IsIntegral(f)) return ((int) f).ToString();
            else return "?";
        }
    }
}
